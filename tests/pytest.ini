[tool:pytest]
# 测试路径配置
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 命令行选项
addopts = 
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --cov=backend/app
    --cov-report=term-missing
    --cov-report=html:tests/reports/coverage
    --cov-report=xml:tests/reports/coverage.xml
    --junit-xml=tests/reports/junit.xml
    --maxfail=5
    --durations=10

# 测试标记定义
markers =
    unit: Unit tests - 单元测试
    integration: Integration tests - 集成测试
    e2e: End-to-end tests - 端到端测试
    performance: Performance tests - 性能测试
    slow: Slow running tests - 慢速测试
    database: Tests that require database - 需要数据库的测试
    api: API tests - API测试
    auth: Authentication tests - 认证测试
    patient: Patient related tests - 患者相关测试
    image: Image processing tests - 影像处理测试
    diagnosis: Diagnosis tests - 诊断测试
    report: Report generation tests - 报告生成测试
    notification: Notification tests - 通知测试
    security: Security tests - 安全测试
    regression: Regression tests - 回归测试
    smoke: Smoke tests - 冒烟测试
    critical: Critical functionality tests - 关键功能测试

# 最小版本要求
minversion = 6.0

# 测试发现配置
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    node_modules
    __pycache__
    .pytest_cache

# 过滤警告
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:django.*
    ignore::UserWarning:sqlalchemy.*

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 覆盖率配置
[coverage:run]
source = backend/app
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    */.venv/*
    */node_modules/*
    */static/*
    */media/*
    */locale/*
    */fixtures/*
    */conftest.py
    */settings/*
    */wsgi.py
    */asgi.py
    */manage.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
skip_covered = false
precision = 2

[coverage:html]
directory = tests/reports/coverage
title = Medical Imaging System Coverage Report

[coverage:xml]
output = tests/reports/coverage.xml
